---
description: 
globs: 
alwaysApply: false
---
# PLAN MODE: LLM-Powered Planning Workflow

## OVERVIEW
This mode uses the AI's Large Language Model (LLM) capabilities to analyze the project goal and context, then propose a high-level plan structured into Epics, Sprints, and Tasks. The output of this mode is the generated plan text, intended for review and subsequent manual refinement or use in updating `tasks.md`.

## WORKFLOW

```mermaid
graph TD
    Start["PLAN Mode Start"] --> AutoSync["Step 1: Auto-Sync Completed Tasks (Optional)"]
    AutoSync --> ReadContext["Step 2: Read Project Context"]
    ReadContext --> IdentifyGoal["Step 3: Identify Planning Goal"]
    IdentifyGoal --> GeneratePlan["Step 4: Generate Epic/Sprint/Task Plan (LLM Task)"]
    GeneratePlan --> OutputPlan["Step 5: Output Generated Plan Text"]
    OutputPlan --> End["PLAN Mode End - Review Plan"]
```

## DETAILED STEPS

### Step 1: Auto-Sync Completed Tasks (Optional Check)
*   **(Optional) Action**: Perform the automatic check for tasks completed in Jira but not updated in `tasks.md`, proposing `edit_file` if needed. (Keep this step for data hygiene).

### Step 2: Read Project Context
*   **Action**: Read relevant context files to understand the project goals and current state. Primarily focus on:
    *   `projectbrief.md` (If available)
    *   `activeContext.md` (If available and relevant)
    *   `tasks.md` (To understand existing tasks and structure)
    *   User's initial request for planning.

### Step 3: Identify Planning Goal
*   **Action**: Based on the context read in Step 2, clearly state the main goal or feature that needs to be planned. Ask the user for clarification if the goal is unclear.
*   **Report**: "Planning Goal: [Formulated Goal]."

### Step 4: Generate Epic/Sprint/Task Plan (LLM Task)
*   **Instruction (Prompt for LLM)**: "Analyze the formulated goal (from Step 3) and the project context read. Using your understanding of software development and project management:
    1.  Identify 2-5 major logical blocks of work (**Epics**) required to achieve the goal. Give each Epic a clear name.
    2.  For **each Epic**, propose a list of **specific, actionable tasks** required for its implementation. Formulate tasks clearly.
    3.  Group the proposed tasks into sequential **Sprints** (e.g., 3-7 tasks each, or based on estimated complexity for 1-2 weeks of work). Name the Sprints (e.g., 'Sprint 1', 'Sprint 2', or by dates).
    4.  Format the entire plan using Markdown: Level 2 headings (`##`) for Epics, Level 3 headings (`###`) for Sprints, and lists (`- [ ]`) for tasks."
*   **(Internal LLM Execution)**: The AI model will process this prompt and generate the plan structure based on its understanding.

### Step 5: Output Generated Plan Text
*   **Action**: Output the complete plan text generated by the LLM in the previous step directly into the chat for user review.
*   **Report**: "Here is the proposed plan, broken down by Epics and Sprints. Please review it. You can use this plan to update `tasks.md` or for further discussion."

### Step 6: PLAN Mode End - Review Plan
*   The mode concludes after presenting the plan. Further actions (like editing `tasks.md` based on this plan, creating Jira tickets, or moving to another mode) should be initiated by the user in subsequent requests.
